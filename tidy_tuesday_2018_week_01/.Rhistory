legend.title = element_text(face = "bold"),
plot.title = element_text(face = "bold", size = 15),
plot.subtitle = element_text(size = 13)) +
scale_x_continuous(limits = c(1, 12),
breaks = seq(1, 12, by = 1),
labels = unique(df_long$Year)) +
scale_y_continuous(limits = c(2000, 18000),
breaks = seq(2000, 18000, by = 4000),
labels = scales::comma)
df_long %>%
mutate(year_code = as.numeric(factor(Year))) %>%
ggplot(aes(x = year_code, y = Tuition, group = State)) +
geom_line(show.legend = FALSE, color = "gray", size = 3, alpha = 0.5) +
geom_line(aes(x = year_code, y = Tuition, color = Region),
data = track_by_region, inherit.aes = FALSE, size = 5, alpha = 0.5) +
theme_minimal() +
theme(legend.position = "bottom",
panel.grid.minor.x = element_blank(),
axis.title.x = element_text(size = 13, face = "bold"),
axis.text.x = element_text(size = 11),
axis.title.y = element_text(size = 13, face = "bold"),
axis.text.y = element_text(size = 11),
legend.title = element_text(face = "bold"),
plot.title = element_text(face = "bold", size = 15),
plot.subtitle = element_text(size = 13)) +
scale_x_continuous(limits = c(1, 12),
breaks = seq(1, 12, by = 1),
labels = unique(df_long$Year)) +
scale_y_continuous(limits = c(2000, 16000),
breaks = seq(2000, 16000, by = 2000),
labels = scales::comma)
df_long %>%
mutate(year_code = as.numeric(factor(Year))) %>%
ggplot(aes(x = year_code, y = Tuition, group = State)) +
geom_line(show.legend = FALSE, color = "gray", size = 3, alpha = 0.5) +
geom_line(aes(x = year_code, y = Tuition, color = Region),
data = track_by_region, inherit.aes = FALSE, size = 5, alpha = 0.5) +
theme_minimal() +
theme(legend.position = "bottom",
panel.grid.minor.x = element_blank(),
axis.title.x = element_text(size = 13, face = "bold"),
axis.text.x = element_text(size = 11),
axis.title.y = element_text(size = 13, face = "bold"),
axis.text.y = element_text(size = 11),
legend.title = element_text(face = "bold"),
plot.title = element_text(face = "bold", size = 15),
plot.subtitle = element_text(size = 13)) +
scale_x_continuous(limits = c(1, 12),
breaks = seq(1, 12, by = 1),
labels = unique(df_long$Year)) +
scale_y_continuous(limits = c(2000, 16000),
breaks = seq(2000, 16000, by = 3000),
labels = scales::comma)
df_long %>%
mutate(year_code = as.numeric(factor(Year))) %>%
ggplot(aes(x = year_code, y = Tuition, group = State)) +
geom_line(show.legend = FALSE, color = "gray", size = 3, alpha = 0.5) +
geom_line(aes(x = year_code, y = Tuition, color = Region),
data = track_by_region, inherit.aes = FALSE, size = 5, alpha = 0.5) +
theme_minimal() +
theme(legend.position = "bottom",
panel.grid.minor.x = element_blank(),
axis.title.x = element_text(size = 13, face = "bold"),
axis.text.x = element_text(size = 11),
axis.title.y = element_text(size = 13, face = "bold"),
axis.text.y = element_text(size = 11),
legend.title = element_text(face = "bold"),
plot.title = element_text(face = "bold", size = 15),
plot.subtitle = element_text(size = 13)) +
scale_x_continuous(limits = c(1, 12),
breaks = seq(1, 12, by = 1),
labels = unique(df_long$Year)) +
scale_y_continuous(limits = c(2000, 16000),
breaks = seq(2000, 16000, by = 2000),
labels = scales::comma)
df_long %>%
mutate(year_code = as.numeric(factor(Year))) %>%
ggplot(aes(x = year_code, y = Tuition, group = State)) +
geom_line(show.legend = FALSE, color = "gray", size = 3, alpha = 0.5) +
geom_line(aes(x = year_code, y = Tuition, color = Region),
data = track_by_region, inherit.aes = FALSE, size = 5, alpha = 0.5) +
theme_minimal() +
theme(legend.position = "bottom",
panel.grid.minor.x = element_blank(),
axis.title.x = element_text(size = 13, face = "bold"),
axis.text.x = element_text(size = 11),
axis.title.y = element_text(size = 13, face = "bold"),
axis.text.y = element_text(size = 11),
legend.title = element_text(face = "bold"),
plot.title = element_text(face = "bold", size = 15),
plot.subtitle = element_text(size = 13)) +
scale_x_continuous(limits = c(1, 12),
breaks = seq(1, 12, by = 1),
labels = unique(df_long$Year)) +
scale_y_continuous(limits = c(2000, 16000),
breaks = seq(2000, 16000, by = 2000),
labels = scales::comma) +
labs(x = "\nYear")
df_long %>%
mutate(year_code = as.numeric(factor(Year))) %>%
ggplot(aes(x = year_code, y = Tuition, group = State)) +
geom_line(show.legend = FALSE, color = "gray", size = 3, alpha = 0.5) +
geom_line(aes(x = year_code, y = Tuition, color = Region),
data = track_by_region, inherit.aes = FALSE, size = 5, alpha = 0.5) +
theme_minimal() +
theme(legend.position = "bottom",
panel.grid.minor.x = element_blank(),
axis.title.x = element_text(size = 13, face = "bold"),
axis.text.x = element_text(size = 11),
axis.title.y = element_text(size = 13, face = "bold"),
axis.text.y = element_text(size = 11),
legend.title = element_text(face = "bold"),
plot.title = element_text(face = "bold", size = 15),
plot.subtitle = element_text(size = 13)) +
scale_x_continuous(limits = c(1, 12),
breaks = seq(1, 12, by = 1),
labels = unique(df_long$Year)) +
scale_y_continuous(limits = c(2000, 16000),
breaks = seq(2000, 16000, by = 2000),
labels = scales::comma) +
labs(x = "\nYear",
y = "Median tuition price",
title = "Change in median tuition price",
subtitle = "Median regional changes highlighted") +
guides(color = guide_legend(
title.position = "top",
))
df_long %>%
mutate(year_code = as.numeric(factor(Year))) %>%
ggplot(aes(x = year_code, y = Tuition, group = State)) +
geom_line(show.legend = FALSE, color = "gray", size = 3, alpha = 0.5) +
geom_line(aes(x = year_code, y = Tuition, color = Region),
data = track_by_region, inherit.aes = FALSE, size = 5, alpha = 0.5) +
theme_minimal() +
theme(legend.position = "bottom",
panel.grid.minor.x = element_blank(),
axis.title.x = element_text(size = 13, face = "bold"),
axis.text.x = element_text(size = 11),
axis.title.y = element_text(size = 13, face = "bold"),
axis.text.y = element_text(size = 11),
legend.title = element_text(face = "bold"),
plot.title = element_text(face = "bold", size = 15),
plot.subtitle = element_text(size = 13)) +
scale_x_continuous(limits = c(1, 12),
breaks = seq(1, 12, by = 1),
labels = unique(df_long$Year)) +
scale_y_continuous(limits = c(2000, 16000),
breaks = seq(2000, 16000, by = 2000),
labels = scales::comma) +
labs(x = "\nYear",
y = "Median tuition price",
title = "Change in median tuition price",
subtitle = "Median regional changes highlighted") +
guides(color = guide_legend(
title.position = "top",
title.hjust = 0.5
))
df_long %>%
mutate(year_code = as.numeric(factor(Year))) %>%
ggplot(aes(x = year_code, y = Tuition, group = State)) +
geom_line(show.legend = FALSE, color = "gray", size = 3, alpha = 0.5) +
geom_line(aes(x = year_code, y = Tuition, color = Region),
data = track_by_region, inherit.aes = FALSE, size = 5, alpha = 0.5) +
theme_minimal() +
theme(legend.position = "bottom",
panel.grid.minor.x = element_blank(),
axis.title.x = element_text(size = 13, face = "bold"),
axis.text.x = element_text(size = 11),
axis.title.y = element_text(size = 13, face = "bold"),
axis.text.y = element_text(size = 11),
legend.title = element_text(face = "bold"),
plot.title = element_text(face = "bold", size = 15),
plot.subtitle = element_text(size = 13)) +
scale_x_continuous(limits = c(1, 12),
breaks = seq(1, 12, by = 1),
labels = unique(df_long$Year)) +
scale_y_continuous(limits = c(2000, 16000),
breaks = seq(2000, 16000, by = 2000),
labels = scales::comma) +
labs(x = "\nYear",
y = "Median tuition price",
title = "Change in median tuition price",
subtitle = "Median regional changes highlighted") +
guides(color = guide_legend(
title.position = "top",
title.hjust = 0.5
label.position = "top"
df_long %>%
mutate(year_code = as.numeric(factor(Year))) %>%
ggplot(aes(x = year_code, y = Tuition, group = State)) +
geom_line(show.legend = FALSE, color = "gray", size = 3, alpha = 0.5) +
geom_line(aes(x = year_code, y = Tuition, color = Region),
data = track_by_region, inherit.aes = FALSE, size = 5, alpha = 0.5) +
theme_minimal() +
theme(legend.position = "bottom",
panel.grid.minor.x = element_blank(),
axis.title.x = element_text(size = 13, face = "bold"),
axis.text.x = element_text(size = 11),
axis.title.y = element_text(size = 13, face = "bold"),
axis.text.y = element_text(size = 11),
legend.title = element_text(face = "bold"),
plot.title = element_text(face = "bold", size = 15),
plot.subtitle = element_text(size = 13)) +
scale_x_continuous(limits = c(1, 12),
breaks = seq(1, 12, by = 1),
labels = unique(df_long$Year)) +
scale_y_continuous(limits = c(2000, 16000),
breaks = seq(2000, 16000, by = 2000),
labels = scales::comma) +
labs(x = "\nYear",
y = "Median tuition price",
title = "Change in median tuition price",
subtitle = "Median regional changes highlighted") +
guides(color = guide_legend(
title.position = "top",
title.hjust = 0.5,
label.position = "top"
))
df_long %>%
mutate(year_code = as.numeric(factor(Year))) %>%
ggplot(aes(x = year_code, y = Tuition, group = State)) +
geom_line(show.legend = FALSE, color = "gray", size = 3, alpha = 0.5) +
geom_line(aes(x = year_code, y = Tuition, color = Region),
data = track_by_region, inherit.aes = FALSE, size = 5, alpha = 0.5) +
theme_minimal() +
theme(legend.position = "bottom",
panel.grid.minor.x = element_blank(),
axis.title.x = element_text(size = 13, face = "bold"),
axis.text.x = element_text(size = 11),
axis.title.y = element_text(size = 13, face = "bold"),
axis.text.y = element_text(size = 11),
legend.title = element_text(face = "bold"),
plot.title = element_text(face = "bold", size = 15),
plot.subtitle = element_text(size = 13)) +
scale_x_continuous(limits = c(1, 12),
breaks = seq(1, 12, by = 1),
labels = unique(df_long$Year)) +
scale_y_continuous(limits = c(2000, 16000),
breaks = seq(2000, 16000, by = 2000),
labels = scales::comma) +
labs(x = "\nYear",
y = "Median tuition price",
title = "Change in median tuition price",
subtitle = "Median regional changes highlighted") +
guides(color = guide_legend(
title.position = "top",
title.hjust = 0.5,
label.position = "top",
keywidth = 4
))
df_long %>%
mutate(year_code = as.numeric(factor(Year))) %>%
ggplot(aes(x = year_code, y = Tuition, group = State)) +
geom_line(show.legend = FALSE, color = "gray", size = 3, alpha = 0.5) +
geom_line(aes(x = year_code, y = Tuition, color = Region),
data = track_by_region, inherit.aes = FALSE, size = 5, alpha = 0.5) +
theme_minimal() +
theme(legend.position = "bottom",
panel.grid.minor.x = element_blank(),
axis.title.x = element_text(size = 13, face = "bold"),
axis.text.x = element_text(size = 11),
axis.title.y = element_text(size = 13, face = "bold"),
axis.text.y = element_text(size = 11),
legend.title = element_text(face = "bold"),
plot.title = element_text(face = "bold", size = 15),
plot.subtitle = element_text(size = 13)) +
scale_x_continuous(limits = c(1, 12),
breaks = seq(1, 12, by = 1),
labels = unique(df_long$Year)) +
scale_y_continuous(limits = c(2000, 16000),
breaks = seq(2000, 16000, by = 2000),
labels = scales::comma) +
labs(x = "\nYear",
y = "Median tuition price",
title = "Change in median tuition price",
subtitle = "Median regional changes highlighted") +
guides(color = guide_legend(
title.position = "top",
title.hjust = 0.5,
label.position = "top",
keywidth = 4
)) +
viridis::scale_color_viridis(alpha = 0.9, option = "C", discrete = TRUE)
df_long %>%
ggplot(aes(x = Year, y = Tuition, color = Region)) +
geom_jitter(width = 0.11, size = 5, alpha = 0.7, shape = 19) +
geom_smooth() +
theme_minimal() +
scale_color_viridis(option = "B", discrete = TRUE, begin = 0.6) +
theme(legend.position = "bottom")
df_long %>%
ggplot(aes(x = Year, y = Tuition, color = Region)) +
geom_jitter(width = 0.11, size = 5, alpha = 0.7, shape = 19) +
theme_minimal() +
scale_color_viridis(option = "B", discrete = TRUE, begin = 0.6) +
theme(legend.position = "bottom")
df_long %>%
ggplot(aes(x = Year, y = Tuition, color = Region)) +
geom_jitter(width = 0.11, size = 5, alpha = 0.7, shape = 19) +
theme_minimal() +
scale_color_viridis(option = "A", discrete = TRUE, begin = 0.6) +
theme(legend.position = "bottom")
df_long %>%
ggplot(aes(x = Year, y = Tuition, color = Region)) +
geom_jitter(width = 0.11, size = 5, alpha = 0.7, shape = 19) +
theme_minimal() +
scale_color_viridis(option = "E", discrete = TRUE, begin = 0.6) +
theme(legend.position = "bottom")
df_long %>%
ggplot(aes(x = Year, y = Tuition, color = Region)) +
geom_jitter(width = 0.11, size = 5, alpha = 0.7, shape = 19) +
theme_minimal() +
scale_color_viridis(option = "D", discrete = TRUE, begin = 0.6) +
theme(legend.position = "bottom")
df_long %>%
ggplot(aes(x = Year, y = Tuition, color = Region)) +
geom_jitter(width = 0.11, size = 5, alpha = 0.7, shape = 19) +
theme_minimal() +
scale_color_viridis(option = "B", discrete = TRUE, begin = 0.6) +
theme(legend.position = "bottom")
df_long %>%
ggplot(aes(x = Year, y = Tuition, color = Region)) +
geom_jitter(width = 0.11, size = 5, alpha = 0.7, shape = 19) +
theme_minimal() +
scale_color_viridis(option = "C", discrete = TRUE, begin = 0.6) +
theme(legend.position = "bottom")
df_long %>%
ggplot(aes(x = Year, y = Tuition, color = Region)) +
geom_jitter(width = 0.11, size = 5, alpha = 0.7, shape = 19) +
theme_minimal() +
scale_color_viridis(option = "D", discrete = TRUE, begin = 0.6) +
theme(legend.position = "bottom")
df_long %>%
ggplot(aes(x = Year, y = Tuition, color = Region)) +
geom_jitter(width = 0.11, size = 5, alpha = 0.7, shape = 19) +
theme_minimal() +
scale_color_brewer(type = "div", palette = 2) +
#scale_color_viridis(option = "D", discrete = TRUE, begin = 0.6) +
theme(legend.position = "bottom")
df_long %>%
ggplot(aes(x = Year, y = Tuition, color = Region)) +
geom_jitter(width = 0.11, size = 5, alpha = 0.7, shape = 19) +
theme_minimal() +
scale_color_brewer(type = "div", palette = 1) +
#scale_color_viridis(option = "D", discrete = TRUE, begin = 0.6) +
theme(legend.position = "bottom")
df_long %>%
ggplot(aes(x = Year, y = Tuition, color = Region)) +
geom_jitter(width = 0.11, size = 5, alpha = 0.7, shape = 19) +
theme_minimal() +
scale_color_brewer(type = "div", palette = 10) +
#scale_color_viridis(option = "D", discrete = TRUE, begin = 0.6) +
theme(legend.position = "bottom")
df_long %>%
ggplot(aes(x = Year, y = Tuition, color = Region)) +
geom_jitter(width = 0.11, size = 5, alpha = 0.7, shape = 19) +
theme_minimal() +
scale_color_brewer(type = "div", palette = 3) +
#scale_color_viridis(option = "D", discrete = TRUE, begin = 0.6) +
theme(legend.position = "bottom")
df_long %>%
ggplot(aes(x = Year, y = Tuition, color = Region)) +
geom_jitter(width = 0.11, size = 5, alpha = 0.7, shape = 19) +
theme_minimal() +
scale_color_brewer(type = "div", palette = 4) +
#scale_color_viridis(option = "D", discrete = TRUE, begin = 0.6) +
theme(legend.position = "bottom")
df_long %>%
ggplot(aes(x = Year, y = Tuition, color = Region)) +
geom_jitter(width = 0.11, size = 5, alpha = 0.7, shape = 19) +
theme_minimal() +
scale_color_brewer(type = "div", palette = 5) +
#scale_color_viridis(option = "D", discrete = TRUE, begin = 0.6) +
theme(legend.position = "bottom")
df_long %>%
ggplot(aes(x = Tuition, y = fct_rev(Year), fill = Region)) +
geom_density_ridges_gradient(color = "black",
show.legend = FALSE,
alpha = 0.3,
panel_scaling = TRUE,
quantile_lines = TRUE, quantiles = 2) +
facet_wrap(~fct_reorder(Region, Tuition, mean), scales = "free") +
scale_x_continuous(limits = c(1000, 18000),
breaks = seq(0, 180000, 3000),
labels = scales::comma) +
theme_minimal() +
labs(x = "Average tuition",
y = "Academic year",
title = "Distribution of average tuition by region",
subtitle = "Solid line denotes the median",
caption = "Tidy tuesday week 1: Tuition price by state") +
scale_color_brewer(type = "div", palette = 5) +
#scale_fill_viridis(alpha = 0.9, option = "C", discrete = TRUE, begin = 0.3) +
theme(panel.grid.minor.x = element_blank(),
plot.title = element_text(size = 15, face = "bold"),
plot.subtitle = element_text(size = 12),
strip.text = element_text(size = 10, face = "bold"))
df_long %>%
ggplot(aes(x = Tuition, y = fct_rev(Year), fill = Region)) +
geom_density_ridges_gradient(color = "black",
show.legend = FALSE,
alpha = 0.3,
panel_scaling = TRUE,
quantile_lines = TRUE, quantiles = 2) +
facet_wrap(~fct_reorder(Region, Tuition, mean), scales = "free") +
scale_x_continuous(limits = c(1000, 18000),
breaks = seq(0, 180000, 3000),
labels = scales::comma) +
theme_minimal() +
labs(x = "Average tuition",
y = "Academic year",
title = "Distribution of average tuition by region",
subtitle = "Solid line denotes the median",
caption = "Tidy tuesday week 1: Tuition price by state") +
scale_color_brewer(type = "div", palette = 1) +
#scale_fill_viridis(alpha = 0.9, option = "C", discrete = TRUE, begin = 0.3) +
theme(panel.grid.minor.x = element_blank(),
plot.title = element_text(size = 15, face = "bold"),
plot.subtitle = element_text(size = 12),
strip.text = element_text(size = 10, face = "bold"))
df_long %>%
ggplot(aes(x = Tuition, y = fct_rev(Year), fill = Region)) +
geom_density_ridges_gradient(color = "black",
show.legend = FALSE,
alpha = 0.3,
panel_scaling = TRUE,
quantile_lines = TRUE, quantiles = 2) +
facet_wrap(~fct_reorder(Region, Tuition, mean), scales = "free") +
scale_x_continuous(limits = c(1000, 18000),
breaks = seq(0, 180000, 3000),
labels = scales::comma) +
theme_minimal() +
labs(x = "Average tuition",
y = "Academic year",
title = "Distribution of average tuition by region",
subtitle = "Solid line denotes the median",
caption = "Tidy tuesday week 1: Tuition price by state") +
#scale_color_brewer(type = "div", palette = 1) +
scale_fill_viridis(alpha = 0.9, option = "C", discrete = TRUE, begin = 0.3) +
theme(panel.grid.minor.x = element_blank(),
plot.title = element_text(size = 15, face = "bold"),
plot.subtitle = element_text(size = 12),
strip.text = element_text(size = 10, face = "bold"))
df_long %>%
ggplot(aes(x = Tuition, y = fct_rev(Year), fill = Region)) +
geom_density_ridges_gradient(color = "black",
show.legend = FALSE,
alpha = 0.3,
panel_scaling = TRUE,
quantile_lines = TRUE, quantiles = 2) +
facet_wrap(~fct_reorder(Region, Tuition, mean), scales = "free") +
scale_x_continuous(limits = c(1000, 18000),
breaks = seq(0, 180000, 3000),
labels = scales::comma) +
theme_minimal() +
labs(x = "Average tuition",
y = "Academic year",
title = "Distribution of average tuition by region",
subtitle = "Solid line denotes the median",
caption = "Tidy tuesday week 1: Tuition price by state") +
scale_color_brewer(type = "div", palette = 5) +
#scale_fill_viridis(alpha = 0.9, option = "C", discrete = TRUE, begin = 0.3) +
theme(panel.grid.minor.x = element_blank(),
plot.title = element_text(size = 15, face = "bold"),
plot.subtitle = element_text(size = 12),
strip.text = element_text(size = 10, face = "bold"))
df_long %>%
ggplot(aes(x = Tuition, y = fct_rev(Year), fill = Region)) +
geom_density_ridges_gradient(color = "black",
show.legend = FALSE,
alpha = 0.3,
panel_scaling = TRUE,
quantile_lines = TRUE, quantiles = 2) +
facet_wrap(~fct_reorder(Region, Tuition, mean), scales = "free") +
scale_x_continuous(limits = c(1000, 18000),
breaks = seq(0, 180000, 3000),
labels = scales::comma) +
theme_minimal() +
labs(x = "Average tuition",
y = "Academic year",
title = "Distribution of average tuition by region",
subtitle = "Solid line denotes the median",
caption = "Tidy tuesday week 1: Tuition price by state") +
scale_color_brewer(type = "div", palette = 2) +
#scale_fill_viridis(alpha = 0.9, option = "C", discrete = TRUE, begin = 0.3) +
theme(panel.grid.minor.x = element_blank(),
plot.title = element_text(size = 15, face = "bold"),
plot.subtitle = element_text(size = 12),
strip.text = element_text(size = 10, face = "bold"))
df_long %>%
ggplot(aes(x = Tuition, y = fct_rev(Year), fill = Region)) +
geom_density_ridges_gradient(color = "black",
show.legend = FALSE,
alpha = 0.3,
panel_scaling = TRUE,
quantile_lines = TRUE, quantiles = 2) +
facet_wrap(~fct_reorder(Region, Tuition, mean), scales = "free") +
scale_x_continuous(limits = c(1000, 18000),
breaks = seq(0, 180000, 3000),
labels = scales::comma) +
theme_minimal() +
labs(x = "Average tuition",
y = "Academic year",
title = "Distribution of average tuition by region",
subtitle = "Solid line denotes the median",
caption = "Tidy tuesday week 1: Tuition price by state") +
#scale_color_brewer(type = "div", palette = 2) +
scale_fill_viridis(alpha = 0.9, option = "C", discrete = TRUE, begin = 0.3) +
theme(panel.grid.minor.x = element_blank(),
plot.title = element_text(size = 15, face = "bold"),
plot.subtitle = element_text(size = 12),
strip.text = element_text(size = 10, face = "bold"))
